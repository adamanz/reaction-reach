#!/usr/bin/env python3
"""
Test Gmail integration with real LinkedIn data
"""
import json
import subprocess
import tempfile
import os
from gmail_integration import integrate_gmail_with_extractor

def test_gmail_with_existing_data():
    """Test Gmail integration using previously extracted LinkedIn data"""
    
    print("📧 Testing Gmail Integration with Real LinkedIn Data")
    print("=" * 60)
    
    # Load the most recent LinkedIn data
    data_files = [
        'reactions_data_1752379497.json',
        'reactions_data_1752379004.json', 
        'reactions_data_1752374826.json'
    ]
    
    contacts_data = None
    for data_file in data_files:
        if os.path.exists(data_file):
            try:
                with open(data_file, 'r') as f:
                    contacts_data = json.load(f)
                print(f"✅ Loaded data from: {data_file}")
                print(f"📊 Found {len(contacts_data)} contacts")
                break
            except Exception as e:
                print(f"❌ Error loading {data_file}: {e}")
                continue
    
    if not contacts_data:
        print("❌ No LinkedIn data found. Run smart_linkedin_extractor.py first.")
        return False
    
    # Test the integration
    print(f"\n🚀 Testing Gmail integration with {len(contacts_data)} contacts...")
    
    try:
        result = integrate_gmail_with_extractor(contacts_data)
        
        if result:
            print("✅ Gmail integration test successful!")
            print("📧 Check your Gmail drafts folder for new emails")
            return True
        else:
            print("❌ Gmail integration test failed")
            return False
            
    except Exception as e:
        print(f"❌ Error during Gmail integration: {e}")
        return False

def create_single_test_draft():
    """Create a single test draft to verify Gmail is working"""
    
    print("\n🧪 Creating single test draft...")
    
    test_contact = {
        "name": "Test Contact",
        "title": "Software Engineer at TechCorp",
        "company": "TechCorp", 
        "connection_degree": "1st",
        "profile_url": "https://linkedin.com/in/test"
    }
    
    email_data = {
        "to": ["adam@mysimplestack.com"],  # Use your actual email
        "subject": "Test: LinkedIn Integration Working!",
        "body": f"""Hi Adam,

This is a test email to verify the LinkedIn → Gmail integration is working correctly.

Contact details:
- Name: {test_contact['name']}
- Title: {test_contact['title']} 
- Company: {test_contact['company']}
- Connection: {test_contact['connection_degree']}

If you see this draft in Gmail, the integration is working perfectly!

Best regards,
LinkedIn Reactions Extractor

---
Generated by smart_linkedin_extractor.py
"""
    }
    
    try:
        # Create temporary file
        with tempfile.NamedTemporaryFile(mode='w', suffix='.json', delete=False) as f:
            json.dump(email_data, f, indent=2)
            temp_file = f.name
        
        print(f"📁 Created test email: {email_data['subject']}")
        
        # Call Gmail MCP
        result = subprocess.run([
            "npx", "@gongrzhe/server-gmail-autoauth-mcp",
            "draft_email", 
            "--input", temp_file
        ], capture_output=True, text=True, timeout=30)
        
        if result.returncode == 0:
            print("✅ Test draft created successfully!")
            print("📧 Check your Gmail drafts for: 'Test: LinkedIn Integration Working!'")
            return True
        else:
            print(f"❌ Test draft failed: {result.stderr}")
            return False
            
    except Exception as e:
        print(f"❌ Error creating test draft: {e}")
        return False
    finally:
        if 'temp_file' in locals() and os.path.exists(temp_file):
            os.unlink(temp_file)

if __name__ == "__main__":
    # First test with real data
    success1 = test_gmail_with_existing_data()
    
    # Then create a single test draft to your email
    success2 = create_single_test_draft()
    
    print(f"\n🏁 Final Results:")
    print(f"📊 Data Integration Test: {'✅ PASSED' if success1 else '❌ FAILED'}")
    print(f"📧 Single Draft Test: {'✅ PASSED' if success2 else '❌ FAILED'}")
    
    if success2:
        print(f"\n💡 Check your Gmail drafts folder now!")
        print(f"🔍 Look for: 'Test: LinkedIn Integration Working!'")